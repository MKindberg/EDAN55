package lab3;

import java.util.LinkedList;

public class IndSet {
	
	
	public static void main(String[] args) {
		LinkedList<Integer>[] graph;
	}
	
	public int R0(LinkedList<Integer>[] graph){
		for(LinkedList l:graph)
		for(LinkedList l:graph)
			if(l.size()==0){
				graph.remove(l);
				return 1+R0(graph);
			}
		int max=0;
		LinkedList maxN=null;
		
		for(LinkedList l:graph)//get max neighbors
			if(l.size()>max){
				max = l.size();
				maxN = l;
			}
		LinkedList<LinkedList<Integer>> graph2 = copy(graph);
		
	}
	
	public boolean empty(LinkedList<Integer>[] graph){
		for(LinkedList l:graph)
			if(l!=null)
				return false;
		return true;
	}
	
	public LinkedList<LinkedList<Integer>> copy (LinkedList<LinkedList<Integer>> graph){
		LinkedList<LinkedList<Integer>> cpy = new LinkedList<LinkedList<Integer>>();
		for(LinkedList<Integer> l:graph){
			LinkedList<Integer> c = new LinkedList<Integer>();
			for(int i:l)
				c.add(i);
			cpy.add(c);
		}
		return cpy;
	}
	
	public void remove(LinkedList<LinkedList<Integer>> graph, LinkedList<Integer> node){
		graph.remove(node);
		for()
	}
}
